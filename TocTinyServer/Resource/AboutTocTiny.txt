关于TOC Tiny:

    最后一次更新于: 2021 - 1 - 4

    基本原理:
        利用 EventedSocket 以及 CHO.Json 发送一个个的"数据包", 由于不存在高级的功能, 所以传输的数据包实体类 TransPackage 足以描述这些
        功能.
    问题:
        1. 已经更新了关于发送图片的功能, 但是我突然发现, TCP 中根本不存在包的概念, 所以, 一个大的包, 就可能被分为多个小的包.
          <$> 方案: 服务端在分析包, 出现失败后(这个包被判定为某个包的一部分), 则将这个包的内容写入到小包缓冲区, 并设置写入时间, 根据写入前这
              个流的长度来判断本次写入是否是第一次写入, 如果是第一次写入, 则不做处理, 如果不是第一次写入, 则尝试将整个流的内容分析一遍, 判断
              是否是一个完整的包.    流写入的时间是用来被一个清理器线程用来判断的, 这个清理器线程会每隔一段时间对这些流进行清理, 如果当前时间
              与写入时间的差大于某个特定值, 则清空这个内存流.    还有一点, 就是每当正确分析来自客户端的一段数据时, 总是会对内存流进行清理.
                这是因为, 旧的数据已经不可能被成功分析, 因为流中的一部分被分析成功了. (希望后来看到这个片段的人能够理解)